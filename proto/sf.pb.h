/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Tue Jan  1 23:29:17 2019. */

#ifndef PB_SF_PB_H_INCLUDED
#define PB_SF_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Command {
    pb_callback_t command;
/* @@protoc_insertion_point(struct:Command) */
} Command;

typedef struct _Notification {
    pb_callback_t what;
/* @@protoc_insertion_point(struct:Notification) */
} Notification;

typedef struct _SensorName {
    pb_callback_t name;
/* @@protoc_insertion_point(struct:SensorName) */
} SensorName;

typedef struct _SensorRead {
    pb_callback_t name;
    pb_callback_t values;
/* @@protoc_insertion_point(struct:SensorRead) */
} SensorRead;

typedef struct _SensorReadList {
    pb_callback_t reads;
/* @@protoc_insertion_point(struct:SensorReadList) */
} SensorReadList;

typedef struct _Ping {
    int32_t value;
/* @@protoc_insertion_point(struct:Ping) */
} Ping;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Command_init_default                     {{{NULL}, NULL}}
#define SensorRead_init_default                  {{{NULL}, NULL}, {{NULL}, NULL}}
#define SensorName_init_default                  {{{NULL}, NULL}}
#define Ping_init_default                        {0}
#define SensorReadList_init_default              {{{NULL}, NULL}}
#define Notification_init_default                {{{NULL}, NULL}}
#define Command_init_zero                        {{{NULL}, NULL}}
#define SensorRead_init_zero                     {{{NULL}, NULL}, {{NULL}, NULL}}
#define SensorName_init_zero                     {{{NULL}, NULL}}
#define Ping_init_zero                           {0}
#define SensorReadList_init_zero                 {{{NULL}, NULL}}
#define Notification_init_zero                   {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Command_command_tag                      1
#define Notification_what_tag                    1
#define SensorName_name_tag                      1
#define SensorRead_name_tag                      1
#define SensorRead_values_tag                    2
#define SensorReadList_reads_tag                 1
#define Ping_value_tag                           1

/* Struct field encoding specification for nanopb */
extern const pb_field_t Command_fields[2];
extern const pb_field_t SensorRead_fields[3];
extern const pb_field_t SensorName_fields[2];
extern const pb_field_t Ping_fields[2];
extern const pb_field_t SensorReadList_fields[2];
extern const pb_field_t Notification_fields[2];

/* Maximum encoded size of messages (where known) */
/* Command_size depends on runtime parameters */
/* SensorRead_size depends on runtime parameters */
/* SensorName_size depends on runtime parameters */
#define Ping_size                                11
/* SensorReadList_size depends on runtime parameters */
/* Notification_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SF_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
